queries:
  - name: "pgdb__columns__data"
    query: "select current_database() ||'_'|| to_char(now(), 'YYYY-MM-DDHH24MISS') AS PKEY,1 AS CON_ID, UPPER(table_schema) as OWNER, UPPER(table_name) as TABLE_NAME, UPPER(column_name) as COLUMN_NAME, UPPER(data_type) as DATA_TYPE, character_maximum_length as DATA_LENGTH, numeric_precision as DATA_PRECISION, numeric_scale as DATA_SCALE, is_nullable as NULLABLE, 'Postgres' as DMA_SOURCE_ID, NULL as DMA_MANUAL_ID  from information_schema.columns where table_schema not in ('pg_catalog','information_schema');"
  - name: "pgdb__instances__data"
    query: "select current_database() ||'_'|| to_char(now(), 'YYYY-MM-DDHH24MISS') AS PKEY,1 AS CON_ID;"
  - name: "pgdb__views__data"
    query: "select current_database() ||'_'|| to_char(now(), 'YYYY-MM-DDHH24MISS') AS PKEY,1 AS CON_ID, UPPER(table_schema) OWNER, UPPER(table_name) VIEW_NAME, 'Postgres' as DMA_SOURCE_ID, NULL as DMA_MANUAL_ID from information_schema.views where table_schema not in ('pg_catalog','information_schema');"
  - name: "pgdb__dbobjectnames__data" 
    query: | 
      SELECT
          current_database() ||'_'|| to_char(now(), 'YYYY-MM-DDHH24MISS') AS PKEY,1 AS CON_ID,
          UPPER(n.nspname) AS OWNER,    -- Schema containing the object
          UPPER(c.relname) AS OBJECT_NAME, -- Object name
          CASE c.relkind 
              WHEN 'r' THEN 'TABLE'       -- Regular table
              WHEN 'v' THEN 'VIEW'        -- View
              WHEN 'm' THEN 'MATERIALIZED VIEW'  
              WHEN 'i' THEN 'INDEX'       -- Index
              WHEN 'S' THEN 'SEQUENCE'    -- Sequence
              WHEN 't' THEN 'TOAST TABLE' -- TOAST table (internal)
              WHEN 'p' THEN 'PARTITIONED TABLE' -- Partitioned table
              ELSE c.relkind::text        -- Other object types
          END AS OBJECT_TYPE, 'Postgres' as DMA_SOURCE_ID, NULL as DMA_MANUAL_ID
      FROM
          pg_class c
      LEFT JOIN
          pg_namespace n ON n.oid = c.relnamespace
      WHERE
          c.relkind IN ('r', 'v', 'm', 'i', 'S', 't', 'p')  -- Filter desired object types 
          AND n.nspname NOT IN ('pg_catalog', 'information_schema','pg_toast')  -- Exclude system schemas
      ORDER BY
          3,4;
  - name: "pgdb__sourcecodedetailed__data" 
    query: | 
      SELECT
          current_database() ||'_'|| to_char(now(), 'YYYY-MM-DDHH24MISS') AS PKEY,1 AS CON_ID,
          UPPER(n.nspname) AS OWNER,
          UPPER(p.proname) AS NAME, -- Procedures and functions
          CASE p.prokind 
              WHEN 'p' THEN 'PROCEDURE'
              WHEN 'f' THEN 'FUNCTION'
          END AS TYPE,
          -- pg_get_functiondef(p.oid) AS definition,
          (SELECT COUNT(*) FROM regexp_split_to_table(pg_get_functiondef(p.oid), '\n')) AS NR_LINES, 'Postgres' as DMA_SOURCE_ID, NULL as DMA_MANUAL_ID
      FROM
          pg_proc p
      JOIN
          pg_namespace n ON p.pronamespace = n.oid
      WHERE
          p.prolang = (SELECT oid FROM pg_language WHERE lanname = 'plpgsql')  -- Filter for PL/pgSQL
          AND n.nspname NOT IN ('pg_catalog', 'information_schema')  -- Exclude system schemas
      ORDER BY
          3,4;
  - name: "pgdb__triggers__data" 
    query: | 
      SELECT 
        current_database() ||'_'|| to_char(now(), 'YYYY-MM-DDHH24MISS') AS PKEY,1 AS CON_ID,
        n.nspname AS OWNER,
        t.tgname AS trigger_name,
        -- CASE WHEN t.tgtype = 't' THEN 'ROW' ELSE 'STATEMENT' END AS trigger_type,
        t.tgrelid::regclass AS table_name,
        t.tgenabled AS status,
        'Postgres' as DMA_SOURCE_ID, NULL as DMA_MANUAL_ID
      FROM pg_trigger AS t
      JOIN pg_class AS c ON t.tgrelid = c.oid
      JOIN pg_namespace AS n ON c.relnamespace = n.oid
      WHERE tgisinternal = false  and n.nspname not in ( 'public', 'information_schema');